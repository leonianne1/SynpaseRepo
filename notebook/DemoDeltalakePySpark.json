{
	"name": "DemoDeltalakePySpark",
	"properties": {
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "SparkPool01",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "56g",
			"driverCores": 8,
			"executorMemory": "56g",
			"executorCores": 8,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "3d21ce4b-f04b-4c97-97e2-5b18c507d439"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/ee1067f6-c197-4e8b-a1a8-4705de78c3fb/resourceGroups/Synpase-Analytics-GA/providers/Microsoft.Synapse/workspaces/asaworkspacesynapseal/bigDataPools/SparkPool01",
				"name": "SparkPool01",
				"type": "Spark",
				"endpoint": "https://asaworkspacesynapseal.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/SparkPool01",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "2.4",
				"nodeCount": 3,
				"cores": 8,
				"memory": 56,
				"automaticScaleJobs": false
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"source": [
					"# Creation d'un dataframe df1 avec des donnees de vente\r\n",
					"from pyspark.sql.types import StructType,StructField, StringType, IntegerType, FloatType\r\n",
					"saleSchema = StructType([ \\\r\n",
					"    StructField(\"item\",StringType(),True), \\\r\n",
					"    StructField(\"customer\",IntegerType(),True), \\\r\n",
					"    StructField(\"quantity\",IntegerType(),True), \\\r\n",
					"    StructField(\"price\", FloatType(), True) \\\r\n",
					"  ])\r\n",
					"\r\n",
					"\r\n",
					"saleData = [(\"cheese\",1,1,5.0),\r\n",
					"    (\"bread\",1,1,1.0)\r\n",
					"  ]\r\n",
					"\r\n",
					"df1 = spark.createDataFrame(data=saleData,schema=saleSchema)"
				],
				"execution_count": 33
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# write the data frame as a delta file\r\n",
					"df1.write.format(\"delta\").mode(\"overwrite\").save(\"abfss://wwi-02@asadatalakesynapseal.dfs.core.windows.net/salesPySpark\")\r\n",
					"spark.sql(\"DROP TABLE sales\")\r\n",
					"spark.sql(\"CREATE TABLE sales USING DELTA LOCATION 'abfss://wwi-02@asadatalakesynapseal.dfs.core.windows.net/salesPySpark'\")"
				],
				"execution_count": 34
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"SELECT * FROM sales"
				],
				"execution_count": 35
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"#adding a steak\r\n",
					"saleData2 = [(\"steak\",1,1,9.9)\r\n",
					"  ]\r\n",
					"df2 = spark.createDataFrame(data=saleData2,schema=saleSchema)\r\n",
					"df2.write.format(\"delta\").mode(\"append\").save(\"abfss://wwi-02@asadatalakesynapseal.dfs.core.windows.net/salesPySpark\")"
				],
				"execution_count": 36
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"-- DESCRIBE HISTORY sales\r\n",
					"DESCRIBE HISTORY delta.`abfss://wwi-02@asadatalakesynapseal.dfs.core.windows.net/salesPySpark`"
				],
				"execution_count": 37
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"df = spark.read.format(\"delta\").option(\"versionAsOf\", 0).load(\"abfss://wwi-02@asadatalakesynapseal.dfs.core.windows.net/salesPySpark\")\r\n",
					"df.show()"
				],
				"execution_count": 40
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"from delta.tables import *\r\n",
					"from pyspark.sql.functions import *\r\n",
					"\r\n",
					"sales = DeltaTable.forPath(spark, \"abfss://wwi-02@asadatalakesynapseal.dfs.core.windows.net/salesPySpark\")\r\n",
					"sales.update(\r\n",
					"    condition= expr(\"item == 'cheese'\"),\r\n",
					"    set = { \"quantity\": expr(\"3\")}\r\n",
					")\r\n",
					"\r\n",
					"sales.toDF().show()"
				],
				"execution_count": 39
			}
		]
	}
}